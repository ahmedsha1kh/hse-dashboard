# Generated by Django 5.2.3 on 2025-06-20 18:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('monthly', 'Monthly Inspection'), ('biannual', 'Biannual Inspection'), ('hazardous', 'Hazardous Waste Inspection'), ('chemical_waste', 'Chemical Waste Inventory')], default='monthly', max_length=20)),
                ('fire_extinguishers_checked', models.BooleanField(default=False)),
                ('emergency_exits_inspected', models.BooleanField(default=False)),
                ('first_aid_kits_checked', models.BooleanField(default=False)),
                ('spill_kits_stocked', models.BooleanField(default=False)),
                ('ppe_stocked', models.BooleanField(default=False)),
                ('lab_coats_clean', models.BooleanField(default=False)),
                ('biohazard_waste_reviewed', models.BooleanField(default=False)),
                ('chemical_waste_reviewed', models.BooleanField(default=False)),
                ('glass_sharp_waste_reviewed', models.BooleanField(default=False)),
                ('lab_surfaces_clean', models.BooleanField(default=False)),
                ('balances_calibrated_cleaned', models.BooleanField(default=False)),
                ('microscopes_calibrated_cleaned', models.BooleanField(default=False)),
                ('freezers_functional_clean', models.BooleanField(default=False)),
                ('secondary_containment_ok', models.BooleanField(default=False)),
                ('evidence_of_spills_or_expired_stock', models.BooleanField(default=False)),
                ('chemicals_stored_labelled', models.BooleanField(default=False)),
                ('safety_data_sheets_available', models.BooleanField(default=False)),
                ('chemicals_in_inventory', models.BooleanField(default=False)),
                ('chemical_containers_closed_and_disposed', models.BooleanField(default=False)),
                ('spill_kit_accessible', models.BooleanField(default=False)),
                ('bio_sample_temp_maintained', models.BooleanField(default=False)),
                ('lab_consumables_stock_ok', models.BooleanField(default=False)),
                ('storage_conditions_ok', models.BooleanField(default=False)),
                ('training_up_to_date', models.BooleanField(default=False)),
                ('chemical_name', models.CharField(max_length=100)),
                ('quantity_liters', models.FloatField(help_text='Total quantity in liters')),
                ('container_size', models.CharField(help_text='E.g., 500ml, 1L, etc.', max_length=50)),
                ('stored_in', models.CharField(help_text='Storage location or cabinet', max_length=100)),
                ('used_by', models.CharField(help_text='Name of the person who used the chemical', max_length=100)),
                ('used_for', models.CharField(help_text='Purpose for which the chemical was used', max_length=100)),
                ('hazard_classification', models.CharField(max_length=100)),
                ('disposed', models.BooleanField(default=False)),
                ('disposed_date', models.DateField()),
                ('disposed_by', models.CharField(max_length=100)),
                ('hazardous_waste_generated', models.BooleanField(default=False, verbose_name='Has hazardous waste been generated this week?')),
                ('containers_labeled', models.BooleanField(default=False, verbose_name='Are containers labeled?')),
                ('containers_segregated', models.BooleanField(default=False, verbose_name='Are containers segregated?')),
                ('containers_free_from_leaks', models.BooleanField(default=False, verbose_name='Are containers free from leaks?')),
                ('secondary_containment_in_place', models.BooleanField(default=False, verbose_name='Is secondary containment in place?')),
                ('storage_limit_exceeded', models.BooleanField(default=False, verbose_name='Has the storage limit been exceeded?')),
                ('remarks_or_corrective_action', models.TextField(blank=True, verbose_name='Remarks/Corrective Action Taken')),
            ],
        ),
    ]
